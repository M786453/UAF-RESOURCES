#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
int main(int argc, char *argv[])

{
 
   printf("PID of example.c = %d\n", getpid());

    execlp("ls", "ls", "-al", "/usr", (char *) 0);

    printf("Back to example.c");

    getchar();

    return 0;
}

****************************************************
#include<stdio.h> 
#include<stdlib.h> 
#include<unistd.h> 
int main() 
{ 

	printf("PID of example.c = %d\n", getpid());	

        //A null terminated array of character  
        //pointers 
        char *args[]={"./HelloWorld",NULL}; // calling binary or excuteable file Name EXEC

        execv(args[0],args); 
      
        /*All statements are ignored after execvp() call as this whole  
        process(execDemo.c) is replaced by another process (EXEC.c) 
        */
        printf("Ending-----"); 
      
    return 0; 
} 